@page "/materiais"
@using Newtonsoft.Json
@using OrcamentoVinil.Models
@using OrcamentoVinil.Util
@using RestSharp

<PageTitle>Cadastro de Materiais</PageTitle>

<style>
	/* Oculta as setas de incremento e decremento em inputs do tipo number */
	input[type=number]::-webkit-inner-spin-button,
	input[type=number]::-webkit-outer-spin-button {
		-webkit-appearance: none; /* Remove a aparência padrão do navegador */
		margin: 0; /* Remove a margem padrão */
	}

	input[type=number] {
		-moz-appearance: textfield; /* Firefox */
	}
</style>

<h1>Cadastro de Materiais</h1>

<div>
	<div class="mb-3">
		<label for="descricao">Descrição:</label>
		<input id="descricao" class="form-control" @bind="novaDescricao" />
	</div>
	<div class="row">
		<div class="col-6">
			<label for="precoM2">Preço m²:</label>
			<input type="number" id="precoM2" class="form-control" @bind="novoPrecoM2" />
		</div>
		<div class="col-6">
			<label for="precoML">Preço ml:</label>
			<input type="number" id="precoML" class="form-control" @bind="novoPrecoML" />
		</div>
	</div>
	<div class="row my-3">
		<div class="col-md-4">
			<button class="btn btn-primary btn-block" @onclick="AdicionarOuAlterar">@alterarOuAdicionar</button>
		</div>
	</div>
</div>

@if (lstMateriais == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th hidden="hidden">ID</th>
				<th>Descrição</th>
				<th>Preço m²</th>
				<th>Preço ml</th>
			</tr>
		</thead>
		<tbody>
			@foreach (Material material in lstMateriais)
			{
				<tr>
					<td hidden="hidden">@material.ID</td>
					<td>@material.Descricao</td>
					<td>@material.PrecoM2</td>
					<td>@material.PrecoML</td>
					<td>
						<button class="btn btn-primary my-1" @onclick="() => CarregarMaterial(material)">
							<img src="images/alterar.png" alt="Editar" style="width: 20px; height: 20px;" />
						</button>
						<button class="btn btn-danger my-1" @onclick="() => DeletarMaterial(material.ID)">
							<img src="images/remover.png" alt="Remover" style="width: 20px; height: 20px;" />
						</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	private List<Material>? lstMateriais;
	private string novaDescricao = string.Empty;
	private string alterarOuAdicionar = string.Empty;
	private decimal novoPrecoM2;
	private decimal novoPrecoML;
	private int materialID;

	protected override void OnInitialized()
	{
		alterarOuAdicionar = "Adicionar";
		BuscarMateriais();
		base.OnInitialized();
	}

	private async void AdicionarMaterial()
	{
		RequestMaterial novoMaterial = new RequestMaterial();

		novoMaterial.Descricao = novaDescricao.ToUpper();
		novoMaterial.PrecoM2 = novoPrecoM2;
		novoMaterial.PrecoML = novoPrecoML;

		string json = JsonConvert.SerializeObject(novoMaterial);

		var client = new RestClient(Constants.URL_BASE);
		var request = new RestRequest("//v1/Materiais", Method.Post);
		request.AddHeader("accept", "*/*");
		request.AddHeader("Content-Type", "application/json");
		request.AddJsonBody(json);

		RestResponse response = await client.ExecuteAsync(request);

		if (response.StatusCode == System.Net.HttpStatusCode.Created)
		{
			novaDescricao = string.Empty;
			novoPrecoM2 = 0;
			novoPrecoML = 0;

			BuscarMateriais();
		}
	}

	private async void AlterarMaterial(int paramMaterialID)
	{
		RequestMaterial novoMaterial = new RequestMaterial();

		novoMaterial.Descricao = novaDescricao.ToUpper();
		novoMaterial.PrecoM2 = novoPrecoM2;
		novoMaterial.PrecoML = novoPrecoML;

		string json = JsonConvert.SerializeObject(novoMaterial);

		var client = new RestClient(Constants.URL_BASE);
		var request = new RestRequest($"/v1/Materiais?id={paramMaterialID}", Method.Put);
		request.AddHeader("accept", "*/*");
		request.AddHeader("Content-Type", "application/json");
		request.AddJsonBody(json);

		RestResponse response = await client.ExecuteAsync(request);

		if (response.StatusCode == System.Net.HttpStatusCode.OK)
		{
			alterarOuAdicionar = "Adicionar";
			materialID = 0;
			novaDescricao = string.Empty;
			novoPrecoM2 = 0;
			novoPrecoML = 0;

			BuscarMateriais();
		}
	}

	private async void BuscarMateriais()
	{
		var client = new RestClient(Constants.URL_BASE);
		var request = new RestRequest("//v1/Materiais", Method.Get);
		request.AddHeader("accept", "*/*");

		RestResponse response = await client.ExecuteAsync(request);

		if (response.StatusCode == System.Net.HttpStatusCode.OK)
		{
			lstMateriais = JsonConvert.DeserializeObject<List<Material>>(response.Content).OrderByDescending(o => o.ID).ToList();
			StateHasChanged();
		}
	}

	private async void DeletarMaterial(int materialID)
	{
		await InvokeAsync(() =>
		{
			if (lstMateriais != null)
				lstMateriais = null;
		});

		var client = new RestClient(Constants.URL_BASE);
		var request = new RestRequest($"/v1/Materiais/{materialID}", Method.Delete);
		request.AddHeader("accept", "*/*");

		RestResponse response = await client.ExecuteAsync(request);

		if (response.StatusCode == System.Net.HttpStatusCode.OK)
			BuscarMateriais();
		else//colocar uma mesagem que não é possível apagar
			BuscarMateriais();
	}

	private void AdicionarOuAlterar()
	{
		if (string.IsNullOrEmpty(novaDescricao))
			return;

		if (lstMateriais != null)
			lstMateriais = null;

		if (alterarOuAdicionar == "Adicionar")
			AdicionarMaterial();
		else
			AlterarMaterial(materialID);
	}

	private void CarregarMaterial(Material material)
	{
		alterarOuAdicionar = "Alterar";

		materialID = material.ID;
		novaDescricao = material.Descricao;
		novoPrecoM2 = material.PrecoM2;
		novoPrecoML = material.PrecoML;
	}

}
